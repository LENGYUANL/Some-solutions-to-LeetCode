//brute force
// public class Solution {
//     public boolean checkSubarraySum(int[] nums, int k) {
//         int sum = 0;
//         Map<Integer,Integer> map = new HashMap<Integer,Integer>();
//         map.put(0,-1);
//         for (int i = 0; i < nums.length; i++){
//             sum += nums[i];
//             if (k != 0) sum %= k;
//             if (map.containsKey(sum) && i - map.get(sum) >= 2) return true;
//             else map.put(sum,i);
//         }
//         return false;
//     }
// }

//HashMap
public class Solution {
    public boolean checkSubarraySum(int[] nums, int k) {
        HashMap<Integer, Integer> map = new HashMap<>();
        map.put(0, -1); //这句话一定不能省
        int reminderSum = 0;
        for(int i = 0; i < nums.length; i++) {
            reminderSum += nums[i];
            if(k!=0) reminderSum %= k;
            if(map.containsKey(reminderSum)) {
                if(i - map.get(reminderSum) >= 2) return true;
            } else {
                map.put(reminderSum, i);
            }
        }
        return false;
    }
}
