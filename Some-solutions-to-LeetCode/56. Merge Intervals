Given a collection of intervals, merge all overlapping intervals.

For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18].
///////////////////////////////////////////
//要点主要3点：
1、要用arraylist表示动态空间
2、向res中添加interval时候要记得new，因为interval不是基本数据类型，而是一个对象
3、思路：将intervals的start和end分别进行排序
/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public List<Interval> merge(List<Interval> intervals) {
        List<Interval> res = new ArrayList<Interval>();
        int[] start = new int[intervals.size()];
        int[] end = new int[intervals.size()];
        for (int i = 0; i < intervals.size(); i++){
            start[i] = intervals.get(i).start;
            end[i] = intervals.get(i).end;
        }
        Arrays.sort(start);
        Arrays.sort(end);
        for (int i = 0,j = 0; j < start.length; j++){
            if (j == start.length-1 || end[j] < start[j+1]){
                res.add(new Interval(start[i],end[j]));
                i = j + 1;
            }
        }
        return res;
    }
}
